# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         # Serve static files for Next.js (_next/static/ and other assets)
#         location /_next/ {
#             root /usr/share/nginx/html;
#             try_files $uri $uri/ =404;
#         }

#         # Serve files from the /public folder
#         location /public/ {
#             root /usr/share/nginx/html;
#             try_files $uri $uri/ =404;
#         }

#         # Reverse proxy to the Next.js app running on port 3000
#         location / {
#             proxy_pass http://nextjs:3000;
#            # proxy_pass http://127.0.0.1:3000;  # Use 127.0.0.1 instead of localhost for consistency in Docker
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }

# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;

#         # Serve static files (CSS, JS, etc.)
#         location /_next/ {
#             root /usr/share/nginx/html;
#         }

#         location /public/ {
#             root /usr/share/nginx/html;
#         }

#         # Reverse proxy to the Next.js app running on port 3000
#         location / {
#             proxy_pass http://localhost:3000;  # This assumes Next.js runs on port 3000
#             proxy_http_version 1.1;
#             proxy_set_header Upgrade $http_upgrade;
#             proxy_set_header Connection 'upgrade';
#             proxy_set_header Host $host;
#             proxy_cache_bypass $http_upgrade;
#         }
#     }
# }

# events {
#     worker_connections 1024;
# }

# http {
#     server {
#         listen 80;
#         server_name localhost;
#         location /_next/ {
#             root /usr/share/nginx/html;
#         }

#         location /public/ {
#             root /usr/share/nginx/html;
#         }
#         location / {
#             proxy_pass http://localhost:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }
#     }
# }
# http {
#     server {
#         listen 80;
#         server_name http://127.0.0.1:3000;

#         location / {
#             proxy_pass http://127.0.0.1:3000;
#             proxy_set_header Host $host;
#             proxy_set_header X-Real-IP $remote_addr;
#             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#             proxy_set_header X-Forwarded-Proto $scheme;
#         }

#         # Serve static files directly
#         location /_next/ {
#             alias /usr/share/nginx/html/.next/;
#             try_files $uri $uri/ =404;
#         }

#         location /static/ {
#             alias /usr/share/nginx/html/.next/static/;
#             try_files $uri $uri/ =404;
#         }

#         # Other necessary settings...
#     }
# }

events {
    worker_connections 1024;
}

http {
    server {
        listen 80;
        server_name http://152.42.237.176;

        location / {
            proxy_pass http://127.0.0.1:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
        }

        location /static/ {
          #  alias /usr/share/nginx/html/.next/static/;
            try_files $uri $uri/ =404;
        }
    }
}